/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterfaceLayer;

import BusinessLogicLayer.DataManager;
import BusinessLogicLayer.SecurityAlgorithm;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author MuhammadArsalan
 */
public class LoginPage extends javax.swing.JFrame {

    /**
     * Creates new form LoginPage
     */
    private String dbId = "root", dbPass = "", dbName = "UACAgency";
    private int programStatus = 0;
    private int attempts = 5;

    public LoginPage() {
        initComponents();
        this.setPreferredSize(new Dimension(600, 450));
        this.setMaximumSize(new Dimension(600, 450));
        this.setMinimumSize(new Dimension(600, 450));
        this.setBounds(150, 80, 300, 430);
        setUpUI();
    }

    /**
     * Function to set up UI for first time
     */
    public void setUpUI() {
        loginError.setVisible(false);
        dbError.setForeground(Color.red);
        dbError.setVisible(false);
        getConfigurations();
        if (DataManager.getInstance().connectToDatabase(dbName, dbId, dbPass)) {
            if (programStatus == 0) {
                attempts = 5;
                DataManager.getInstance().createFolder("Images");
                attemptsLable.setText("Attempts Left: " + attempts);
            } else if (programStatus == 1) {
                disableUIWithError("         Cannot Proceed. Security Issues!!!");
            }
        } else {
            disableUIWithError("         Cannot Proceed. Database Connection Issues!!!");
        }
    }

    private void disableUIWithError(String error) {
        dbError.setText(error);
        attemptsLable.setVisible(false);
        dbError.setVisible(true);
        disableLogin();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginID = new javax.swing.JTextField();
        loginPassword = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        loginError = new javax.swing.JLabel();
        dbError = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        attemptsLable = new javax.swing.JLabel();
        loginHeader = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Login");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ID:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 140, 40, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Password: ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(150, 200, 80, 30);

        loginID.setToolTipText("User Name");
        loginID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginIDActionPerformed(evt);
            }
        });
        loginID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginIDKeyPressed(evt);
            }
        });
        getContentPane().add(loginID);
        loginID.setBounds(250, 140, 160, 30);

        loginPassword.setToolTipText("Password");
        loginPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(loginPassword);
        loginPassword.setBounds(250, 200, 160, 30);

        loginButton.setText("Login");
        loginButton.setToolTipText("Login to your Account");
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        getContentPane().add(loginButton);
        loginButton.setBounds(280, 280, 80, 30);

        jLabel3.setText("Product By TECHNOCredibles");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(400, 390, 180, 14);

        exitButton.setText("Exit");
        exitButton.setToolTipText("Exit From Application");
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton);
        exitButton.setBounds(30, 380, 90, 30);

        loginError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        loginError.setText("Invalid ID / Password");
        getContentPane().add(loginError);
        loginError.setBounds(250, 244, 270, 20);

        dbError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dbError.setText("ERROR in connecting with Database. Try Again Later!!!!");
        getContentPane().add(dbError);
        dbError.setBounds(140, 170, 410, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 130, 140);

        attemptsLable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        attemptsLable.setText("Attempts Left: 5");
        getContentPane().add(attemptsLable);
        attemptsLable.setBounds(420, 0, 160, 50);

        loginHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background.jpg"))); // NOI18N
        getContentPane().add(loginHeader);
        loginHeader.setBounds(0, 0, 600, 430);

        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(390, 20, 140, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        login();
    }//GEN-LAST:event_loginButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        exit();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void loginPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginPasswordActionPerformed
        // TODO add your handling code here:
        loginButtonActionPerformed(evt);
    }//GEN-LAST:event_loginPasswordActionPerformed

    private void loginIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginIDActionPerformed
        // TODO add your handling code here:
        loginID.nextFocus();
    }//GEN-LAST:event_loginIDActionPerformed

    private void loginIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginIDKeyPressed
        // TODO add your handling code here:
        loginPassword.setText("");
    }//GEN-LAST:event_loginIDKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attemptsLable;
    private javax.swing.JLabel dbError;
    private javax.swing.JButton exitButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginError;
    private javax.swing.JLabel loginHeader;
    private javax.swing.JTextField loginID;
    private javax.swing.JPasswordField loginPassword;
    // End of variables declaration//GEN-END:variables

    /**
     * Function to perform login
     */
    private void login() {
        try {
            // TODO add your handling code here:
            if (attempts != 0) {
                String loginId = loginID.getText();
                String loginPass = loginPassword.getText();
                DataManager dataMgr = DataManager.getInstance();
                if (dataMgr.isValidUser(loginId, loginPass)) {
                    this.dispose();
                    validLoginUIChanges();
                    MainScreen main = new MainScreen(this);
                    main.setVisible(true);
                } else {
                    invalidLoginAttempts();
                }
            } else {
                disableLoginUIChanges();
                turnOffSystem();
            }
        } catch (Exception ex) {
            Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * Function to turn off system
     */
    private void turnOffSystem() {
        Runnable r = new Runnable() {
            public void run() {
                try {
                    Thread.sleep(2000);
                    System.exit(1);
                } catch (InterruptedException ex) {
                    Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };

        Thread thr1 = new Thread(r);
        thr1.start();
    }

    /**
     * Function to disable Login
     */
    private void disableLoginUIChanges() {
        dbError.setText("Chances of hack turning off system.");
        if (programStatus == 0) {
            programStatus = 1;
            setConfigurations();
        } else if (programStatus == 1) {
            programStatus = 2;
            setConfigurations();
        }
        dbError.setVisible(true);
        disableLogin();
    }

    /**
     * Function to change values related to invalid login
     */
    private void invalidLoginAttempts() {
        attempts--;
        attemptsLable.setText("Attempts Left: " + attempts);
        loginError.setForeground(Color.red);
        loginError.setVisible(true);
    }

    /**
     * Function to change UI for valid login
     */
    private void validLoginUIChanges() {
        attemptsLable.setText("Attempts Left: " + attempts);
        loginError.setVisible(false);
        loginID.setText("");
        loginPassword.setText("");
        if (programStatus == 0) {

        } else if (programStatus == 1) {

        }
    }

    /**
     * disable all
     */
    private void disableLogin() {
        dbError.setVisible(true);
        loginID.setEnabled(false);
        loginPassword.setEnabled(false);
        loginButton.setEnabled(false);
    }

    /**
     * exit from application
     *
     * @throws HeadlessException
     */
    private void exit() throws HeadlessException {
        // TODO add your handling code here:
        int selectedOption = JOptionPane.showConfirmDialog(null,
                "Are you sure you wanna exit?",
                "Exit",
                JOptionPane.YES_NO_OPTION);
        if (selectedOption == JOptionPane.YES_OPTION) {
            System.exit(1);
        }
    }

    /**
     * Function to get configurations
     */
    private void getConfigurations() {
        try {
            SecurityAlgorithm algo = new SecurityAlgorithm();
            BufferedReader inp = new BufferedReader(new FileReader("config.properties"));
            programStatus = Integer.parseInt(algo.decode(inp.readLine()));
            dbId = algo.decode(inp.readLine());
            dbPass = algo.decode(inp.readLine());
            dbName = algo.decode(inp.readLine());
        } catch (Exception ex) {
            setConfigurations();
            getConfigurations();
            Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Function to Set configurations
     */
    private void setConfigurations() {
        try {
            SecurityAlgorithm algo = new SecurityAlgorithm();
            BufferedWriter out = new BufferedWriter(new FileWriter("config.properties"));
            out.append("" + algo.encode("" + programStatus));
            out.newLine();
            out.append(algo.encode(dbId));
            out.newLine();
            out.append(algo.encode(dbPass));
            out.newLine();
            out.append(algo.encode(dbName));
            out.close();
        } catch (Exception ex) {
            Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
